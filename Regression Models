########### Running models ##################################
# Run the model - LM LM LM LM
# 10 fold cross validation
 
# Run Splines
# GAM Spline
RSS<- (NA)
for ( i in 1:20)
{
  x<- createDataPartition(train1$SalePrice, p= .95, list = F)
  x<- as.vector(x)
  train<- train1[x,]
  test<- train1[-x,]
  fit<- gam(SalePrice~ +MSSubClass          +ns(LotArea, df = 5)         +LandSlope        +BldgType           +ns(YearBuilt, df = 5)                +Exterior1st       +ExterQual         +BsmtCond        +BsmtFinType2 +HeatingQC        +ns(GrLivArea, df = 5)                +ns(HalfBath, df = 5)       +ns(TotRmsAbvGrd, df = 5)          +GarageQual     +ns(EnclosedPorch, df = 5)                +YrSold +LotConfig          +Condition2       +MSZoning         +LotShape          +Neighborhood +HouseStyle                +ns(YearRemodAdd, df = 5)         +Exterior2nd      +ExterCond        +BsmtExposure +ns(BsmtUnfSF, df = 5)                +CentralAir         +BsmtFullBath   +ns(BedroomAbvGr, df = 5)         +Functional        +GarageFinish   +PavedDrive                +ns(X3SsnPorch, df = 5) +SaleType           +ns(LotFrontage, df = 5) +LandContour   +Condition1       +OverallQual                +RoofStyle          +MasVnrType   +Foundation      +BsmtFinType1 +ns(TotalBsmtSF, df = 5)                +ns(X1stFlrSF, df = 5)   +BsmtHalfBath  +ns(KitchenAbvGr, df = 5)             +ns(Fireplaces, df = 5)    +ns(GarageCars, df = 5)                +ns(WoodDeckSF, df = 5)              +ns(ScreenPorch, df = 5)               +SaleCondition +OverallCond    +RoofMatl                +ns(MasVnrArea, df = 5)               +BsmtQual          +ns(BsmtFinSF1, df = 5) +Heating              +ns(X2ndFlrSF, df = 5)                +ns(FullBath, df = 5)        +KitchenQual     +GarageType     +ns(GarageArea, df = 5) +ns(OpenPorchSF, df = 5)                +ns(MoSold, df = 5)
            , data = train)
  assign(paste0("fit", i), fit)
    pred<- predict(fit, test)
  test$Predicted<- pred
  RSS[i]<- sqrt(sum((log(test$SalePrice) - log(test$Predicted))^2) / nrow(test))
}
 
 
 
# Local Regression
for ( i in 1:10)
{
  x<- createDataPartition(train1$SalePrice, p= .90, list = F)
  x<- as.vector(x)
  train<- train1[x,]
  test<- train1[-x,]
  gam_model2<- gam(SalePrice~ +lo(LotFrontage,             LotArea,               YearBuilt,             YearRemodAdd,                MasVnrArea,     BsmtFinSF1,       BsmtUnfSF,        TotalBsmtSF,      X1stFlrSF,            GrLivArea,
                                  GarageArea,MoSold,span = 0.8)           +MSZoning         +LotShape          +LandContour   +LotConfig                +LandSlope        +Neighborhood +Condition1       +Condition2       +BldgType           +HouseStyle      +OverallQual                +OverallCond    +RoofStyle          +RoofMatl          +Exterior1st       +Exterior2nd      +MasVnrType   +ExterQual                +ExterCond        +Foundation      +BsmtQual          +BsmtCond        +BsmtExposure +BsmtFinType1                +BsmtFinType2 +Heating              +HeatingQC        +CentralAir         +BsmtFullBath   +BsmtHalfBath  +KitchenQual                +Functional        +GarageType     +GarageFinish   +GarageQual     +PavedDrive      +YrSold +SaleType                +SaleCondition
                   , data = train)
 
  pred<- predict(fit, test)
  test$Predicted<- pred
  RSS[i]<- sqrt(sum((log(test$SalePrice) - log(test$Predicted))^2) / nrow(test))
}
 
# Trying out weighted least squares
# 10 fold cross validation
RSS<- (NA)
for ( i in 1:20)
{
  x<- createDataPartition(train1$SalePrice, p= .95, list = F)
  x<- as.vector(x)
  train<- train1[x,]
  test<- train1[-x,]
  fit<- lm(SalePrice~. ,data = train)
  resids<- residuals(fit)
  fit2<- lm(SalePrice~. , weights = 1/abs(resids),data = train)
  pred<- predict(fit2, test)
  test$Predicted<- pred
  RSS[i]<- sqrt(sum((log(test$SalePrice) - log(test$Predicted))^2) / nrow(test))
}
